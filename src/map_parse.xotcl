set docs {
    A small tcl library for parsing all available information on game
    maps.  The maps list should be in the folder data/maps.

    # Example Usage
        source map_parse.xotcl
        set DATADIR ../data
        cd $DATADIR
        puts [[Maps new ./maps] repr] }

package require Tcl 8.5
package require XOTcl
namespace import xotcl::*
set SRCDIR /usr/local/bin
source "$SRCDIR/lib.tcl"

Class create Maps
Class create Map

Maps instproc init {maplistfile} {
    my instvar maps
    set maps [dict create]
    dolines $maplistfile {
         if [lempty? $line] continue
         set mapname [lindex $line 0]
         set gravity_wind_pairs [map {x {split $x :}} [lrange $line 1 end]]
         dict set maps $mapname [Map new $mapname $gravity_wind_pairs] }}

Maps instproc repr {} {
    set result [list]
    dict for {name map} [my set maps] {
        lappend result \
          [list map $name \
                -spawnpoints [$map set spawnpoints] \
                -gravity-wind [$map set gravity_wind_pairs]] }
    return $result }

Map instproc init {mapname gravity_wind_pairs} {
    my set imagefile {}
    my set spawnpoints [list]
    my set mapname $mapname
    my set gravity_wind_pairs $gravity_wind_pairs
    dolines "${mapname}.map" {
        if [lempty? $line] continue
        eval [concat [self] handle_line $line] }}

Map instproc handle_line {command args} {
    my instvar spawnpoints
    switch $command {
        map { my set imagefile [lindex $args 0] }
        spawn { lappend spawnpoints $args }
        # { return }
        default { error [concat
                         "[my set mapname].map"
                         "invalid command: $command"]}}}
