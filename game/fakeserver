#!/usr/bin/tclsh8.5

proc every {ms command} {
   uplevel #0 $command
   after $ms [list every $ms $command] }

proc random i { expr int ( rand ( ) * $i ) }

proc every_flakey {ms command} {
   uplevel #0 $command
   after [random [expr 2 * $ms]] [list every_flakey $ms $command] }

proc p x { puts $x; flush stdout; }
proc explode {r x y} { p [list explode $r $x $y] }
proc shoot {_ x y} { explode 40 $x $y }

fileevent stdin readable {
	gets stdin line
	if {[eof stdin]} { exit 0 }
	set line [split $line]
	switch [lindex $line 0] {
		up { p {shiftplayer 0 -10} }
		down { p {shiftplayer 0 10} }
		left { p {shiftplayer -10 0} }
		right { p {shiftplayer 10 0} }
		shoot {
			if {[llength $line] != 3} break
			shoot {*}$line }}
	flush stdout }

p {
	proc shiftplayer {x y} {
		lassign $::pos X Y
		set X [expr ( $X + $x ) % 800]
		set Y [expr ( $Y + $y ) % 600]
		set ::pos [list $X $Y] }

	proc shift {ent x y} {
		lassign [$ent pos] p0 p1
		set p0 [expr ( $p0 + $x ) % 800]
		set p1 [expr ( $p1 + $y ) % 600]
		$ent pos $p0 $p1 }}

every_flakey 500 { explode 40 [random 800] [random 600] }
every 24 { p {shift .c1 8 8} }
every 70 { p {shift .c2 3 -1} }

vwait forever
